scalar DateTime

type Challenger {
  id: ID!
  avatarUrl: String
  description: String
  hitPoints: Int
  attack: Int
  damage: Int
  record: Record
}

type Record {
  wins: Int!
  losses: Int!
}

type Query {
  getRecord(id: ID!): Record!
  challenger(id: ID!): Challenger!
}

type Mutation {
  fight(leftId: ID!, rightId: ID!): DeathmatchResult!
}

type Subscription {
  blowByBlow(leftId: ID!, rightId: ID!): Sub!
}

type Sub {
  id: ID!
}

type DeathmatchResult{
  rounds: Int!
  winner: String!
  winnerAvatarUrl: String!
  right: ChallengerResult!
  left: ChallengerResult!
}

type ChallengerResult {
  id: ID!
  hitPoints: Int!
  damage: Int!
}
